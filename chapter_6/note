chapter 6 function

1.函数；函数的执行是通过 调用运算符 来实现的。操作的表达式是函数或者函数指针，调用函数的过程首先是用实参初始化形參
2.局部对象 形参和函数体内定义的对象统称为局部对象
  自动对象 函数体内定义的对象称为自动对象（没有static修饰符的），局部对象若定义时没有进行初始化，那么他的值可能是无法预料的
  静态局部对象 局部对象加上static 修饰就是静态局部对象，静态局部变量的生命周期可以超过函数的的作用域
3.函数声明，函数声明可以声明多次，但是函数定义只能有一次 函数声明又称之为函数原型
4.分离式编译 生成可执行文件的过程为：先编译成.o文件，然后将所有的.o文件链接成可执行文件，c++ 允许修改一个源文件然后生成对应的.o文件，然后直接进行链接，而不用编译其他源文件
5.参数传递 形參的类型决定参数传递的类型，若形參的类型为引用，则绑定到实參上，若为其他类型则进行值拷贝
  参数传递的过程和变量初始化的过程一样，通常使用引用代替指针避免对象拷贝
  尽量使用const 引用，不能吧const 对象或者字面量传递给 非const 引用(原因：非const 引用需要左值为其初始化，而字面量为右值)
6.数组形參
  int &arr[10] 含有10个指向int的引用
  int (&arr)[10] 指向数组元素个数为10的引用
  int *arr[10] 含有10个指向int的指针
  int (*arr)[10] 指向含有10个int的数组的指针
  并不存在引用数组

  void fun(int *arr) == void fun(int []) == void fun(int [10])
  数组参数自动转变成指针
7.函数返回值
  不能fa